webpackHotUpdate(0,{

/***/ 546:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SET_STATIC_USAGET = exports.REMOVE_ALL_CSV_FIELDS = exports.SET_LINE_KEY = exports.SET_USAGET_TYPE = exports.REMOVE_USAGET_MAPPING = exports.REMOVE_CSV_FIELD = exports.MAP_USAGET = exports.CLEAR_INPUT_PROCESSOR = exports.SET_FIELD_WIDTH = exports.GOT_INPUT_PROCESSORS = exports.GOT_PROCESSOR_SETTINGS = exports.SET_RECEIVER_FIELD = exports.SET_CUSETOMER_MAPPING = exports.SET_RATING_FIELD = exports.SET_CUSTOMER_MAPPING = exports.ADD_USAGET_MAPPING = exports.ADD_CSV_FIELD = exports.SET_FIELD_MAPPING = exports.SET_FIELDS = exports.SET_DELIMITER = exports.SET_DELIMITER_TYPE = exports.SET_NAME = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.getProcessorSettings = getProcessorSettings;\nexports.setName = setName;\nexports.setDelimiterType = setDelimiterType;\nexports.setDelimiter = setDelimiter;\nexports.setFields = setFields;\nexports.setFieldWidth = setFieldWidth;\nexports.setFieldMapping = setFieldMapping;\nexports.addCSVField = addCSVField;\nexports.removeCSVField = removeCSVField;\nexports.removeAllCSVFields = removeAllCSVFields;\nexports.addUsagetMapping = addUsagetMapping;\nexports.removeUsagetMapping = removeUsagetMapping;\nexports.setStaticUsaget = setStaticUsaget;\nexports.mapUsaget = mapUsaget;\nexports.setCustomerMapping = setCustomerMapping;\nexports.setRatingField = setRatingField;\nexports.setLineKey = setLineKey;\nexports.setReceiverField = setReceiverField;\nexports.saveInputProcessorSettings = saveInputProcessorSettings;\nexports.getInputProcessors = getInputProcessors;\nexports.newInputProcessor = newInputProcessor;\nexports.clearInputProcessor = clearInputProcessor;\nexports.deleteInputProcessor = deleteInputProcessor;\nexports.setUsagetType = setUsagetType;\n\nvar _axios = __webpack_require__(267);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _progressbarActions = __webpack_require__(285);\n\nvar _modalActions = __webpack_require__(547);\n\nvar _commonActions = __webpack_require__(266);\n\nvar _Api = __webpack_require__(265);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SET_NAME = exports.SET_NAME = 'SET_NAME';\nvar SET_DELIMITER_TYPE = exports.SET_DELIMITER_TYPE = 'SET_DELIMITER_TYPE';\nvar SET_DELIMITER = exports.SET_DELIMITER = 'SET_DELIMITER';\nvar SET_FIELDS = exports.SET_FIELDS = 'SET_HEADERS';\nvar SET_FIELD_MAPPING = exports.SET_FIELD_MAPPING = 'SET_FIELD_MAPPING';\nvar ADD_CSV_FIELD = exports.ADD_CSV_FIELD = 'ADD_CSV_FIELD';\nvar ADD_USAGET_MAPPING = exports.ADD_USAGET_MAPPING = 'ADD_USAGET_MAPPING';\nvar SET_CUSTOMER_MAPPING = exports.SET_CUSTOMER_MAPPING = 'SET_CUSTOMER_MAPPING';\nvar SET_RATING_FIELD = exports.SET_RATING_FIELD = 'SET_RATING_FIELD';\nvar SET_CUSETOMER_MAPPING = exports.SET_CUSETOMER_MAPPING = 'SET_CUSETOMER_MAPPING';\nvar SET_RECEIVER_FIELD = exports.SET_RECEIVER_FIELD = 'SET_RECEIVER_FIELD';\nvar GOT_PROCESSOR_SETTINGS = exports.GOT_PROCESSOR_SETTINGS = 'GOT_PROCESSOR_SETTINGS';\nvar GOT_INPUT_PROCESSORS = exports.GOT_INPUT_PROCESSORS = 'GOT_INPUT_PROCESSORS';\nvar SET_FIELD_WIDTH = exports.SET_FIELD_WIDTH = 'SET_FIELD_WIDTH';\nvar CLEAR_INPUT_PROCESSOR = exports.CLEAR_INPUT_PROCESSOR = 'CLEAR_INPUT_PROCESSOR';\nvar MAP_USAGET = exports.MAP_USAGET = 'MAP_USAGET';\nvar REMOVE_CSV_FIELD = exports.REMOVE_CSV_FIELD = 'REMOVE_CSV_FIELD';\nvar REMOVE_USAGET_MAPPING = exports.REMOVE_USAGET_MAPPING = 'REMOVE_USAGET_MAPPING';\nvar SET_USAGET_TYPE = exports.SET_USAGET_TYPE = 'SET_USAGET_TYPE';\nvar SET_LINE_KEY = exports.SET_LINE_KEY = 'SET_LINE_KEY';\nvar REMOVE_ALL_CSV_FIELDS = exports.REMOVE_ALL_CSV_FIELDS = 'REMOVE_ALL_CSV_FIELDS';\nvar SET_STATIC_USAGET = exports.SET_STATIC_USAGET = 'SET_STATIC_USAGET';\n\nvar axiosInstance = _axios2.default.create({\n  withCredentials: true,\n  baseURL: globalSetting.serverUrl\n});\n\nfunction gotProcessorSettings(settings) {\n  return {\n    type: GOT_PROCESSOR_SETTINGS,\n    settings: settings\n  };\n}\n\nfunction fetchProcessorSettings(file_type) {\n  var convert = function convert(settings) {\n    console.log(settings);\n    var parser = settings.parser;\n    var processor = settings.processor;\n    var customer_identification_fields = settings.customer_identification_fields;\n    var rate_calculators = settings.rate_calculators;\n    var receiver = settings.receiver;\n\n\n    var connections = receiver ? receiver.connections ? receiver.connections[0] : {} : {};\n    var field_widths = parser.type === \"fixed\" ? parser.structure : {};\n    var usaget_type = !processor.usaget_mapping || processor.usaget_mapping.length < 1 ? \"static\" : \"dynamic\";\n\n    return {\n      file_type: settings.file_type,\n      delimiter_type: parser.type,\n      delimiter: parser.separator,\n      usaget_type: usaget_type,\n      fields: parser.type === \"fixed\" ? Object.keys(parser.structure) : parser.structure,\n      field_widths: field_widths,\n      processor: Object.assign({}, processor, {\n        usaget_mapping: usaget_type === \"dynamic\" ? processor.usaget_mapping.map(function (usaget) {\n          return {\n            usaget: usaget.usaget,\n            pattern: usaget.pattern.replace(\"/^\", \"\").replace(\"$/\", \"\")\n          };\n        }) : [{}],\n        src_field: usaget_type === \"dynamic\" ? processor.usaget_mapping[0].src_field : \"\"\n      }),\n      customer_identification_fields: customer_identification_fields,\n      rate_calculators: rate_calculators,\n      receiver: connections\n    };\n  };\n\n  var fetchUrl = '/api/settings?category=file_types&data={\"file_type\":\"' + file_type + '\"}';\n  return function (dispatch) {\n    dispatch((0, _progressbarActions.showProgressBar)());\n    var request = axiosInstance.get(fetchUrl).then(function (resp) {\n      dispatch(gotProcessorSettings(convert(resp.data.details)));\n      dispatch((0, _progressbarActions.hideProgressBar)());\n    }).catch(function (error) {\n      console.log(error);\n      dispatch((0, _modalActions.showModal)(error.data.message, \"Error!\"));\n      dispatch((0, _progressbarActions.hideProgressBar)());\n    });\n  };\n}\n\nfunction getProcessorSettings(file_type) {\n  return function (dispatch) {\n    return dispatch(fetchProcessorSettings(file_type));\n  };\n}\n\nfunction setName(file_type) {\n  return {\n    type: SET_NAME,\n    file_type: file_type\n  };\n}\n\nfunction setDelimiterType(delimiter_type) {\n  return {\n    type: SET_DELIMITER_TYPE,\n    delimiter_type: delimiter_type\n  };\n}\n\nfunction setDelimiter(delimiter) {\n  return {\n    type: SET_DELIMITER,\n    delimiter: delimiter\n  };\n}\n\nfunction setFields(fields) {\n  return {\n    type: SET_FIELDS,\n    fields: fields\n  };\n}\n\nfunction setFieldWidth(field, width) {\n  return {\n    type: SET_FIELD_WIDTH,\n    field: field,\n    width: width\n  };\n}\n\nfunction setFieldMapping(field, mapping) {\n  return {\n    type: SET_FIELD_MAPPING,\n    field: field,\n    mapping: mapping\n  };\n}\n\nfunction addCSVField(field) {\n  return {\n    type: ADD_CSV_FIELD,\n    field: field\n  };\n}\n\nfunction removeCSVField(index) {\n  return {\n    type: REMOVE_CSV_FIELD,\n    index: index\n  };\n}\n\nfunction removeAllCSVFields() {\n  return {\n    type: REMOVE_ALL_CSV_FIELDS\n  };\n}\n\nfunction addUsagetMapping(usaget) {\n  var setUrl = '/api/settings?category=usage_types&action=set&data=[' + JSON.stringify(usaget) + ']';\n  return function (dispatch) {\n    dispatch((0, _progressbarActions.showProgressBar)());\n    var request = axiosInstance.post(setUrl).then(function (resp) {\n      dispatch((0, _progressbarActions.hideProgressBar)());\n      if (!resp.data.status) {\n        dispatch((0, _modalActions.showModal)(resp.data.desc, \"Error!\"));\n      } else {\n        //dispatch(showStatusMessage(\"Saved usaget sucessfully!\", 'success'));\n        return {\n          type: ADD_USAGET_MAPPING,\n          usaget: usaget\n        };\n      }\n    }).catch(function (error) {\n      dispatch((0, _modalActions.showModal)(error.data.message, \"Error!\"));\n      dispatch((0, _progressbarActions.hideProgressBar)());\n    });\n  };\n}\n\nfunction removeUsagetMapping(index) {\n  return {\n    type: REMOVE_USAGET_MAPPING,\n    index: index\n  };\n}\n\nfunction setStaticUsaget(usaget) {\n  return {\n    type: SET_STATIC_USAGET,\n    usaget: usaget\n  };\n}\n\nfunction mapUsaget(mapping) {\n  return {\n    type: MAP_USAGET,\n    mapping: mapping\n  };\n}\n\nfunction setCustomerMapping(field, mapping) {\n  return {\n    type: SET_CUSETOMER_MAPPING,\n    field: field,\n    mapping: mapping\n  };\n}\n\nfunction setRatingField(usaget, rate_key, value) {\n  return {\n    type: SET_RATING_FIELD,\n    usaget: usaget,\n    rate_key: rate_key,\n    value: value\n  };\n}\n\nfunction setLineKey(usaget, value) {\n  return {\n    type: SET_LINE_KEY,\n    usaget: usaget,\n    value: value\n  };\n}\n\nfunction setReceiverField(field, mapping) {\n  return {\n    type: SET_RECEIVER_FIELD,\n    field: field,\n    mapping: mapping\n  };\n}\n\nfunction saveInputProcessorSettings(state, callback) {\n  var part = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n  var processor = state.get('processor'),\n      customer_identification_fields = state.get('customer_identification_fields'),\n      rate_calculators = state.get('rate_calculators'),\n      receiver = state.get('receiver');\n\n  var processor_settings = state.get('usaget_type') === \"static\" ? { default_usaget: processor.get('default_usaget') } : { usaget_mapping: processor.get('usaget_mapping').map(function (usaget) {\n      return {\n        \"src_field\": processor.get('src_field'),\n        \"pattern\": '/^' + usaget.get('pattern') + '$/',\n        \"usaget\": usaget.get('usaget')\n      };\n    }).toJS() };\n\n  var settings = {\n    \"file_type\": state.get('file_type'),\n    \"parser\": {\n      \"type\": state.get('delimiter_type'),\n      \"separator\": state.get('delimiter'),\n      \"structure\": state.get('delimiter_type') === \"fixed\" ? state.get('field_widths') : state.get('fields')\n    },\n    \"processor\": _extends({\n      \"type\": \"Usage\",\n      \"date_field\": processor.get('date_field'),\n      \"volume_field\": processor.get('volume_field')\n    }, processor_settings),\n    \"customer_identification_fields\": customer_identification_fields.toJS(),\n    \"rate_calculators\": rate_calculators.toJS(),\n    \"receiver\": {\n      \"type\": \"ftp\",\n      \"connections\": [receiver.toJS()]\n    }\n  };\n\n  var settingsToSave = void 0;\n  if (part === \"customer_identification_fields\") {\n    var _settingsToSave;\n\n    settingsToSave = (_settingsToSave = { file_type: state.get('file_type') }, _defineProperty(_settingsToSave, part, _extends({}, settings[part])), _defineProperty(_settingsToSave, 'rate_calculators', settings.rate_calculators), _settingsToSave);\n  } else {\n    settingsToSave = part ? _defineProperty({ file_type: state.get('file_type') }, part, _extends({}, settings[part])) : settings;\n  }\n  var query = {\n    api: \"settings\",\n    params: [{ category: \"file_types\" }, { action: \"set\" }, { data: JSON.stringify(settingsToSave) }]\n  };\n  return function (dispatch) {\n    (0, _Api.apiBillRun)(query).then(function (success) {\n      callback(false);\n    }, function (failure) {\n      var errorMessages = failure.error.map(function (resp) {\n        return resp.error.desc;\n      });\n      dispatch((0, _modalActions.showModal)(errorMessages, \"Error!\"));\n      callback(true);\n    }).catch(function (error) {\n      return dispatch((0, _Api.apiBillRunErrorHandler)(error));\n    });\n  };\n}\n\nfunction gotInputProcessors(input_processors) {\n  return {\n    type: GOT_INPUT_PROCESSORS,\n    input_processors: input_processors\n  };\n}\n\nfunction fetchInputProcessors() {\n  var setUrl = '/api/settings?category=file_types&data={}';\n  return function (dispatch) {\n    dispatch((0, _progressbarActions.showProgressBar)());\n    var request = axiosInstance.post(setUrl).then(function (resp) {\n      dispatch(gotInputProcessors(resp.data.details));\n      dispatch((0, _progressbarActions.hideProgressBar)());\n    }).catch(function (error) {\n      dispatch((0, _modalActions.showModal)(error.data.message, \"Error!\"));\n      dispatch((0, _progressbarActions.hideProgressBar)());\n    });\n  };\n}\n\nfunction getInputProcessors() {\n  return function (dispatch) {\n    return dispatch(fetchInputProcessors());\n  };\n}\n\nfunction newInputProcessor() {\n  return {\n    type: 'NEW_PROCESSOR'\n  };\n}\n\nfunction clearInputProcessor() {\n  return {\n    type: CLEAR_INPUT_PROCESSOR\n  };\n}\n\nfunction deleteInputProcessor(file_type, callback) {\n  var query = {\n    api: \"settings\",\n    params: [{ category: \"file_types\" }, { action: \"unset\" }, { data: JSON.stringify({ \"file_type\": file_type }) }]\n  };\n\n  return function (dispatch) {\n    (0, _Api.apiBillRun)(query).then(function (success) {\n      callback(false);\n    }, function (failure) {\n      callback(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\n\nfunction setUsagetType(usaget_type) {\n  return {\n    type: SET_USAGET_TYPE,\n    usaget_type: usaget_type\n  };\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./public/js/actions/inputProcessorActions.js\n ** module id = 546\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./public/js/actions/inputProcessorActions.js?");

/***/ }

})